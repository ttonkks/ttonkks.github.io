{"ast":null,"code":"import { collection, addDoc, getDocs, deleteDoc, doc, updateDoc, query, where } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// Додати нову ціль користувача\nexport const addGoalToFirestore = async (userId, goal) => {\n  try {\n    const goalWithUser = {\n      ...goal,\n      userId\n    };\n    const docRef = await addDoc(collection(db, \"goals\"), goalWithUser);\n    console.log(\"Ціль додана з id: \", docRef.id);\n    return docRef.id;\n  } catch (e) {\n    console.error(\"Помилка додавання цілі: \", e);\n    throw e;\n  }\n};\n\n// Отримати цілі користувача\nexport const fetchGoals = async userId => {\n  try {\n    const q = query(collection(db, \"goals\"), where(\"userId\", \"==\", userId));\n    const querySnapshot = await getDocs(q);\n    const goals = [];\n    querySnapshot.forEach(doc => {\n      goals.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return goals;\n  } catch (e) {\n    console.error(\"Помилка отримання цілей: \", e);\n    throw e;\n  }\n};\n\n// Видалити ціль користувача\nexport const deleteGoalFromFirestore = async (userId, goalId) => {\n  try {\n    // Переконаємося, що goalId це рядок\n    if (typeof goalId !== 'string') {\n      console.log(\"goalId тип:\", typeof goalId);\n      goalId = String(goalId); // перетворюємо в рядок, якщо це число\n    }\n\n    // Перевірка на правильність типу\n    if (typeof goalId !== 'string') {\n      throw new Error(`goalId має бути рядком, а не ${typeof goalId}`);\n    }\n\n    // Логування для перевірки goalId\n    console.log(\"Спроба видалити ціль з goalId:\", goalId);\n\n    // Формуємо правильне посилання на документ\n    const goalRef = doc(db, \"goals\", goalId);\n\n    // Видаляємо документ\n    await deleteDoc(goalRef);\n    console.log(`Ціль з goalId ${goalId} була успішно видалена!`);\n  } catch (e) {\n    console.error(\"Помилка при видаленні цілі: \", e);\n    throw e;\n  }\n};\n\n// Оновити статус виконання цілі\nexport const toggleGoalStatus = async (userId, updatedGoal) => {\n  try {\n    const goalRef = doc(db, \"goals\", updatedGoal.id);\n    await updateDoc(goalRef, {\n      completed: updatedGoal.completed\n    });\n    console.log(`Статус цілі з id ${updatedGoal.id} оновлений на ${updatedGoal.completed}`);\n  } catch (e) {\n    console.error(\"Помилка оновлення статусу цілі: \", e);\n    throw e;\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","deleteDoc","doc","updateDoc","query","where","db","addGoalToFirestore","userId","goal","goalWithUser","docRef","console","log","id","e","error","fetchGoals","q","querySnapshot","goals","forEach","push","data","deleteGoalFromFirestore","goalId","String","Error","goalRef","toggleGoalStatus","updatedGoal","completed"],"sources":["/Users/antoninapetrykovych/Desktop/арпорло/ttonkks.githup.io/lab4/src/firebase/firestore.js"],"sourcesContent":["import { collection, addDoc, getDocs, deleteDoc, doc, updateDoc, query, where } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// Додати нову ціль користувача\nexport const addGoalToFirestore = async (userId, goal) => {\n  try {\n    const goalWithUser = { ...goal, userId };\n    const docRef = await addDoc(collection(db, \"goals\"), goalWithUser);\n    console.log(\"Ціль додана з id: \", docRef.id);\n    return docRef.id;\n  } catch (e) {\n    console.error(\"Помилка додавання цілі: \", e);\n    throw e;\n  }\n};\n\n// Отримати цілі користувача\nexport const fetchGoals = async (userId) => {\n  try {\n    const q = query(collection(db, \"goals\"), where(\"userId\", \"==\", userId));\n    const querySnapshot = await getDocs(q);\n    const goals = [];\n    querySnapshot.forEach((doc) => {\n      goals.push({ id: doc.id, ...doc.data() });\n    });\n    return goals;\n  } catch (e) {\n    console.error(\"Помилка отримання цілей: \", e);\n    throw e;\n  }\n};\n\n// Видалити ціль користувача\nexport const deleteGoalFromFirestore = async (userId, goalId) => {\n  try {\n    // Переконаємося, що goalId це рядок\n    if (typeof goalId !== 'string') {\n      console.log(\"goalId тип:\", typeof goalId);\n      goalId = String(goalId); // перетворюємо в рядок, якщо це число\n    }\n\n    // Перевірка на правильність типу\n    if (typeof goalId !== 'string') {\n      throw new Error(`goalId має бути рядком, а не ${typeof goalId}`);\n    }\n\n    // Логування для перевірки goalId\n    console.log(\"Спроба видалити ціль з goalId:\", goalId);\n\n    // Формуємо правильне посилання на документ\n    const goalRef = doc(db, \"goals\", goalId);\n    \n    // Видаляємо документ\n    await deleteDoc(goalRef);\n    console.log(`Ціль з goalId ${goalId} була успішно видалена!`);\n  } catch (e) {\n    console.error(\"Помилка при видаленні цілі: \", e);\n    throw e;\n  }\n};\n\n// Оновити статус виконання цілі\nexport const toggleGoalStatus = async (userId, updatedGoal) => {\n  try {\n    const goalRef = doc(db, \"goals\", updatedGoal.id);\n    await updateDoc(goalRef, {\n      completed: updatedGoal.completed,\n    });\n    console.log(`Статус цілі з id ${updatedGoal.id} оновлений на ${updatedGoal.completed}`);\n  } catch (e) {\n    console.error(\"Помилка оновлення статусу цілі: \", e);\n    throw e;\n  }\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACzG,SAASC,EAAE,QAAQ,YAAY;;AAE/B;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,KAAK;EACxD,IAAI;IACF,MAAMC,YAAY,GAAG;MAAE,GAAGD,IAAI;MAAED;IAAO,CAAC;IACxC,MAAMG,MAAM,GAAG,MAAMZ,MAAM,CAACD,UAAU,CAACQ,EAAE,EAAE,OAAO,CAAC,EAAEI,YAAY,CAAC;IAClEE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACG,EAAE,CAAC;IAC5C,OAAOH,MAAM,CAACG,EAAE;EAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAED,CAAC,CAAC;IAC5C,MAAMA,CAAC;EACT;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOT,MAAM,IAAK;EAC1C,IAAI;IACF,MAAMU,CAAC,GAAGd,KAAK,CAACN,UAAU,CAACQ,EAAE,EAAE,OAAO,CAAC,EAAED,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEG,MAAM,CAAC,CAAC;IACvE,MAAMW,aAAa,GAAG,MAAMnB,OAAO,CAACkB,CAAC,CAAC;IACtC,MAAME,KAAK,GAAG,EAAE;IAChBD,aAAa,CAACE,OAAO,CAAEnB,GAAG,IAAK;MAC7BkB,KAAK,CAACE,IAAI,CAAC;QAAER,EAAE,EAAEZ,GAAG,CAACY,EAAE;QAAE,GAAGZ,GAAG,CAACqB,IAAI,CAAC;MAAE,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF,OAAOH,KAAK;EACd,CAAC,CAAC,OAAOL,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAED,CAAC,CAAC;IAC7C,MAAMA,CAAC;EACT;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,uBAAuB,GAAG,MAAAA,CAAOhB,MAAM,EAAEiB,MAAM,KAAK;EAC/D,IAAI;IACF;IACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9Bb,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,OAAOY,MAAM,CAAC;MACzCA,MAAM,GAAGC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;IAC3B;;IAEA;IACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIE,KAAK,CAAC,gCAAgC,OAAOF,MAAM,EAAE,CAAC;IAClE;;IAEA;IACAb,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEY,MAAM,CAAC;;IAErD;IACA,MAAMG,OAAO,GAAG1B,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEmB,MAAM,CAAC;;IAExC;IACA,MAAMxB,SAAS,CAAC2B,OAAO,CAAC;IACxBhB,OAAO,CAACC,GAAG,CAAC,iBAAiBY,MAAM,yBAAyB,CAAC;EAC/D,CAAC,CAAC,OAAOV,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAED,CAAC,CAAC;IAChD,MAAMA,CAAC;EACT;AACF,CAAC;;AAED;AACA,OAAO,MAAMc,gBAAgB,GAAG,MAAAA,CAAOrB,MAAM,EAAEsB,WAAW,KAAK;EAC7D,IAAI;IACF,MAAMF,OAAO,GAAG1B,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEwB,WAAW,CAAChB,EAAE,CAAC;IAChD,MAAMX,SAAS,CAACyB,OAAO,EAAE;MACvBG,SAAS,EAAED,WAAW,CAACC;IACzB,CAAC,CAAC;IACFnB,OAAO,CAACC,GAAG,CAAC,oBAAoBiB,WAAW,CAAChB,EAAE,iBAAiBgB,WAAW,CAACC,SAAS,EAAE,CAAC;EACzF,CAAC,CAAC,OAAOhB,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,kCAAkC,EAAED,CAAC,CAAC;IACpD,MAAMA,CAAC;EACT;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}